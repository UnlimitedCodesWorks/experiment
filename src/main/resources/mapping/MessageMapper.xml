<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.yiliya.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="xin.yiliya.pojo.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="send_id" jdbcType="INTEGER" property="sendId" />
    <result column="receive_id" jdbcType="INTEGER" property="receiveId" />
    <result column="read_status" jdbcType="INTEGER" property="readStatus" />
    <result column="msg_time" jdbcType="TIMESTAMP" property="msgTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, send_id, receive_id, read_status, msg_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xin.yiliya.pojo.Message">
    insert into message (id, content, send_id, 
      receive_id, read_status, msg_time
      )
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{sendId,jdbcType=INTEGER}, 
      #{receiveId,jdbcType=INTEGER}, #{readStatus,jdbcType=INTEGER}, #{msgTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="xin.yiliya.pojo.Message" keyProperty="id" useGeneratedKeys="true">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="sendId != null">
        send_id,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="readStatus != null">
        read_status,
      </if>
      <if test="msgTime != null">
        msg_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="sendId != null">
        #{sendId,jdbcType=INTEGER},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="readStatus != null">
        #{readStatus,jdbcType=INTEGER},
      </if>
      <if test="msgTime != null">
        #{msgTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xin.yiliya.pojo.Message">
    update message
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="sendId != null">
        send_id = #{sendId,jdbcType=INTEGER},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="readStatus != null">
        read_status = #{readStatus,jdbcType=INTEGER},
      </if>
      <if test="msgTime != null">
        msg_time = #{msgTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.yiliya.pojo.Message">
    update message
    set content = #{content,jdbcType=VARCHAR},
      send_id = #{sendId,jdbcType=INTEGER},
      receive_id = #{receiveId,jdbcType=INTEGER},
      read_status = #{readStatus,jdbcType=INTEGER},
      msg_time = #{msgTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByUser" parameterType="xin.yiliya.pojo.Message">
    update message
    set read_status = 1
    WHERE `message`.receive_id=#{receiveId}
    AND   `message`.send_id=#{sendId}
  </update>
  <resultMap id="BaseResultMap_1" type="MessagePicture">
    <association property="message" column="id" javaType="message" >
      <id property="id" column="id" />
      <result property="content" column="content" />
      <result property="msgTime" column="msg_time" />
      <result property="readStatus" column="read_status" />
      <result property="receiveId" column="receive_id" />
      <result property="sendId" column="send_id" />
    </association>
    <association property="picture" column="id1" javaType="picture">
      <id property="id" column="id1" />
      <result property="imgPath" column="img_path" />
      <result property="msgId" column="msg_id" />
    </association>
  </resultMap>
  <select id="selectByUserId" parameterType="Integer" resultMap="BaseResultMap_1">
    SELECT
	*
    FROM
	`message` LEFT JOIN picture ON message.id = picture.msg_id
    WHERE
	((`message`.receive_id = #{receiveId}
    AND `message`.send_id = #{sendId})
    OR (`message`.receive_id = #{sendId}
    AND `message`.send_id = #{receiveId}))
    AND `message`.read_status = 1
    AND `message`.content !='/fileNull/'
  </select>
  <select id="selectNewByUserId" parameterType="Integer" resultMap="BaseResultMap_1">
    SELECT
	*
    FROM
	`message` LEFT JOIN picture ON message.id = picture.msg_id
    WHERE
	`message`.receive_id = #{receiveId}
    AND `message`.send_id = #{sendId}
    AND `message`.read_status = 0
    AND `message`.content !='/fileNull/'
  </select>
    <select id="selectNewByUserId1" parameterType="Integer" resultMap="BaseResultMap_1">
        SELECT
        *
        FROM
        `message` LEFT JOIN picture ON message.id = picture.msg_id
        WHERE
        `message`.receive_id = #{receiveId}
        AND `message`.send_id = #{sendId}
        AND `message`.read_status = 0
        AND `message`.content !='/fileNull/'
        ORDER BY `message`.msg_time ASC
    </select>
  <select id="selectRecentNewByUserId" resultMap="BaseResultMap_1">
    SELECT
	*
    FROM
	`message` LEFT JOIN picture ON message.id = picture.msg_id
    WHERE
	((`message`.receive_id = #{receiveId}
    AND `message`.send_id = #{sendId})
    OR (`message`.receive_id = #{sendId}
    AND `message`.send_id = #{receiveId}))
    AND `message`.content !='/fileNull/'
    AND `message`.msg_time >= #{date}
  </select>

  <select id="selectOneByUser" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM `message`
    WHERE `message`.receive_id=#{receiveId}
    AND   `message`.send_id=#{sendId}
    ORDER BY msg_time DESC
    LIMIT 1
  </select>
  <select id="getNewMessagesNum" resultType="_int" parameterType="java.lang.Integer">
    SELECT
	COUNT(*)
    FROM
	`message` LEFT JOIN picture ON message.id = picture.msg_id
    WHERE
	`message`.receive_id = #{receiveId}
    AND `message`.send_id = #{sendId}
    AND `message`.read_status = 0
  </select>


</mapper>