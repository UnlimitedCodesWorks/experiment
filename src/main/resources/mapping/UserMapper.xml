<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.yiliya.dao.UserMapper">
  <resultMap id="BaseResultMap" type="xin.yiliya.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_num" jdbcType="VARCHAR" property="userNum" />
    <result column="user_pass" jdbcType="VARCHAR" property="userPass" />
    <result column="user_head" jdbcType="VARCHAR" property="userHead" />
    <result column="user_gender" jdbcType="VARCHAR" property="userGender" />
    <result column="user_introduce" jdbcType="VARCHAR" property="userIntroduce" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_num, user_pass, user_head, user_gender, user_introduce
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xin.yiliya.pojo.User">
    insert into user (id, user_name, user_num, 
      user_pass, user_head, user_gender, 
      user_introduce)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userNum,jdbcType=VARCHAR}, 
      #{userPass,jdbcType=VARCHAR}, #{userHead,jdbcType=VARCHAR}, #{userGender,jdbcType=VARCHAR}, 
      #{userIntroduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xin.yiliya.pojo.User" keyProperty="id" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userNum != null">
        user_num,
      </if>
      <if test="userPass != null">
        user_pass,
      </if>
      <if test="userHead != null">
        user_head,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userIntroduce != null">
        user_introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNum != null">
        #{userNum,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userIntroduce != null">
        #{userIntroduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xin.yiliya.pojo.User" keyProperty="id" useGeneratedKeys="true">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNum != null">
        user_num = #{userNum,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        user_pass = #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        user_head = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userIntroduce != null">
        user_introduce = #{userIntroduce,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.yiliya.pojo.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_num = #{userNum,jdbcType=VARCHAR},
      user_pass = #{userPass,jdbcType=VARCHAR},
      user_head = #{userHead,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=VARCHAR},
      user_introduce = #{userIntroduce,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="login" resultMap="BaseResultMap">
    SELECT * FROM `user` WHERE user_num=#{number} AND user_pass=md5(#{password})
  </select>
  <select id="getUserInfoById" parameterType="Integer" resultMap="BaseResultMap">
    SELECT * FROM `user` WHERE `user`.id=#{userId}
  </select>
  <select id="getFriendsById" parameterType="Integer" resultMap="BaseResultMap">
    SELECT * FROM `user`
    WHERE `user`.id in (SELECT friends.friend_id FROM friends WHERE friends.user_id=#{userId} AND confirm_status=1)
  </select>
  <select id="getUsersByInput" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM `user` WHERE CONCAT(`user`.user_name,`user`.user_num) LIKE '%${input}%'
  </select>
</mapper>